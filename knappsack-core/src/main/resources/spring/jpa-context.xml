<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:jdbc="http://www.springframework.org/schema/jdbc"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <context:component-scan use-default-filters="false" base-package="com.sparc.knappsack.components">
        <context:include-filter type="assignable"
                                expression="com.sparc.knappsack.components.entities.StorageConfiguration"/>
    </context:component-scan>
    <context:component-scan base-package="com.sparc.knappsack.components.dao"/>

    <context:property-placeholder location="classpath:properties/jdbc.properties" ignore-unresolvable="true"/>

    <beans:bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                p:showSql="false"/>

    <beans:bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>


    <!--PRODUCTION PROFILE-->
    <beans:beans profile="production">

        <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
                    depends-on="flyway"
                    p:packagesToScan="com.sparc.knappsack.components.entities"
                    p:jpaDialect-ref="jpaDialect"
                    p:dataSource-ref="dataSource"
                    p:jpaVendorAdapter-ref="jpaVendorAdapter"
                    p:persistenceUnitName="ComposerJPA"
                    p:jpaPropertyMap-ref="jpaPropertyMap"/>

        <beans:bean id="flyway" class="com.googlecode.flyway.core.Flyway" init-method="migrate">
            <beans:property name="dataSource" ref="dataSource"/>
        </beans:bean>

        <util:map id="jpaPropertyMap">
            <beans:entry key="hibernate.hbm2ddl.auto" value="none"/>
            <beans:entry key="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>
            <beans:entry key="hibernate.show_sql" value="false"/>
            <beans:entry key="hibernate.enable_lazy_load_no_trans" value="true"/>
            <beans:entry key="hibernate.cache.use_second_level_cache" value="true"/>
            <beans:entry key="hibernate.cache.use_query_cache" value="true"/>
            <beans:entry key="hibernate.cache.region.factory_class" value="com.sparc.knappsack.components.cache.KnappsackCacheRegionFactory"/>
        </util:map>

        <!-- Declare a datasource that has pooling capabilities-->
        <beans:bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
            <beans:property name="driverClass" value="${prod.jdbc.driverClassName}" />
            <beans:property name="jdbcUrl" value="${prod.jdbc.url}" />
            <beans:property name="idleConnectionTestPeriodInMinutes" value="5"/>
            <beans:property name="idleMaxAgeInMinutes" value="2"/>
            <beans:property name="maxConnectionsPerPartition" value="30"/>
            <beans:property name="minConnectionsPerPartition" value="10"/>
            <beans:property name="partitionCount" value="4"/>
            <beans:property name="acquireIncrement" value="5"/>
            <beans:property name="statementsCacheSize" value="100"/>
            <beans:property name="releaseHelperThreads" value="3"/>
        </beans:bean>

        <jdbc:initialize-database data-source="dataSource" enabled="true" ignore-failures="DROPS">
            <jdbc:script location="${log.jdbc.loggingStartupScript}"/>
        </jdbc:initialize-database>

    </beans:beans>

    <!--DEV PROFILE-->
    <beans:beans profile="dev">

        <!--Uncomment this code in order to use flyway in the development environment-->
        <!--<beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="flyway"-->
            <!--p:packagesToScan="com.sparc.knappsack.components.entities"-->
            <!--p:jpaDialect-ref="jpaDialect"-->
            <!--p:dataSource-ref="dataSource"-->
            <!--p:jpaVendorAdapter-ref="jpaVendorAdapter"-->
            <!--p:persistenceUnitName="ComposerJPA"-->
            <!--p:jpaPropertyMap-ref="jpaPropertyMap"/>-->

        <!--<beans:bean id="flyway" class="com.googlecode.flyway.core.Flyway" init-method="migrate">-->
            <!--<beans:property name="dataSource" ref="dataSource"/>-->
        <!--</beans:bean>-->

        <!--<util:map id="jpaPropertyMap">-->
            <!--<beans:entry key="hibernate.hbm2ddl.auto" value="none"/>-->
            <!--<beans:entry key="hibernate.dialect" value="${dev.jdbc.dialect}"/>-->
            <!--<beans:entry key="hibernate.show_sql" value="true"/>-->
            <!--<beans:entry key="hibernate.enable_lazy_load_no_trans" value="true"/>-->
            <!--<beans:entry key="hibernate.cache.use_second_level_cache" value="true"/>-->
            <!--<beans:entry key="hibernate.cache.use_query_cache" value="true"/>-->
            <!--<beans:entry key="hibernate.cache.region.factory_class" value="com.sparc.knappsack.components.cache.KnappsackCacheRegionFactory"/>-->
        <!--</util:map>-->

        <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
                    p:packagesToScan="com.sparc.knappsack.components.entities"
                    p:jpaDialect-ref="jpaDialect"
                    p:dataSource-ref="dataSource"
                    p:jpaVendorAdapter-ref="jpaVendorAdapter"
                    p:persistenceUnitName="ComposerJPA"
                    p:jpaPropertyMap-ref="jpaPropertyMap"/>

        <util:map id="jpaPropertyMap">
            <beans:entry key="hibernate.hbm2ddl.auto" value="update"/>
            <beans:entry key="hibernate.dialect" value="${dev.jdbc.dialect}"/>
            <beans:entry key="hibernate.show_sql" value="true"/>
            <beans:entry key="hibernate.enable_lazy_load_no_trans" value="true"/>
            <!--<beans:entry key="hibernate.generate_statistics" value="true"/>-->
            <beans:entry key="hibernate.cache.use_second_level_cache" value="true"/>
            <beans:entry key="hibernate.cache.use_query_cache" value="true"/>
            <beans:entry key="hibernate.cache.region.factory_class" value="com.sparc.knappsack.components.cache.KnappsackCacheRegionFactory"/>
        </util:map>

        <!-- Declare a datasource that has pooling capabilities-->
        <beans:bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
            <beans:property name="driverClass" value="${dev.jdbc.driverClassName}" />
            <beans:property name="jdbcUrl" value="${dev.jdbc.url}" />
            <beans:property name="idleConnectionTestPeriod" value="3600"/>
            <beans:property name="idleMaxAge" value="240"/>
            <beans:property name="maxConnectionsPerPartition" value="30"/>
            <beans:property name="minConnectionsPerPartition" value="10"/>
            <beans:property name="partitionCount" value="3"/>
            <beans:property name="acquireIncrement" value="5"/>
            <beans:property name="statementsCacheSize" value="100"/>
            <beans:property name="releaseHelperThreads" value="3"/>
        </beans:bean>

        <jdbc:initialize-database data-source="dataSource" enabled="true" ignore-failures="DROPS">
            <jdbc:script location="${dev.jdbc.loggingStartupScript}"/>
        </jdbc:initialize-database>

        <!-- provides a H2 console to look into the db if necessary -->
        <beans:bean id="dbWebServer" factory-method="createWebServer"
                    class="com.sparc.knappsack.components.server.DBWebServer"
                    depends-on="dataSource"
                    init-method="start" lazy-init="false">
            <beans:constructor-arg value="-web,-webPort,11111"/>
        </beans:bean>

    </beans:beans>

    <beans:beans profile="dev,production">
        <!--<beans:bean name="hibernateUtils" class="com.sparc.knappsack.util.HibernateUtils"/>-->
        <beans:bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
            <beans:property name="dataSource" ref="dataSource"/>
            <beans:property name="entityManagerFactory" ref="entityManagerFactory"/>
            <beans:property name="jpaDialect" ref="jpaDialect"/>
        </beans:bean>

        <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>

    </beans:beans>

</beans:beans>